name: Docker Image CI

on:
  push:
    branches: [ "mongodump-s3", "*" ]

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Docker Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }} # github username or org
          password: ${{ secrets.GITHUB_TOKEN }}    # github actions builtin token. repo has to have pkg access.
      
      - name: Determine tag name
        id: tag_name
        run: echo ::set-output name=TAG_NAME::$(if [ "${GITHUB_REF##*/}" == "master" ]; then echo "latest"; else echo "${GITHUB_REF##*/}"; fi)

      - name: Prepare
        id: prep
        run: |
          echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')
      
      - name: Build and push
        env:
          TAG: ${{ steps.get_branch_name.outputs.TAG_NAME }}
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./mongodb-backup/Dockerfile
          platforms: linux/amd64
          pull: true # Pull new version of base image, always; avoid bit-rot
          push: true
          labels: |
            org.opencontainers.image.title=${{ github.repository }}
            org.opencontainers.image.description=${{ github.event.repository.description }}
            org.opencontainers.image.url=${{ github.event.repository.html_url }}
            org.opencontainers.image.source=${{ github.event.repository.clone_url }}
            org.opencontainers.image.created=${{ steps.prep.outputs.created }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.licenses=${{ github.event.repository.license.spdx_id }}
          cache-from: type=gha # all-automatic Github Actions caching
          cache-to: type=gha,mode=max
          build-args: |
          tags: ghcr.io/obmondo/mongodbbackup/mongodbbackup:${TAG}
